syntax = "proto3";
package reserve;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "reserve/params.proto";
import "reserve/vault.proto";
// this line is used by starport scaffolding # 1

option go_package = "reserve/x/reserve/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/denom/reserve/params";
  }
  // Queries a list of GetAllVaults items.
	rpc GetAllVaults(QueryGetAllVaultsRequest) returns (QueryGetAllVaultsResponse) {
		option (google.api.http).get = "/reserve/reserve/vaults";
	}

// Queries a list of GetAllVaultsByOwner items.
	rpc GetAllVaultsByOwner(QueryGetAllVaultsByOwnerRequest) returns (QueryGetAllVaultsByOwnerResponse) {
		option (google.api.http).get = "/reserve/reserve/vaults/{address}";
	}

// Queries a list of GetAllVaultsInDefault items.
	rpc GetAllVaultsInDefault(QueryGetAllVaultsInDefaultRequest) returns (QueryGetAllVaultsInDefaultResponse) {
		option (google.api.http).get = "/reserve/reserve/vaults/default";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetAllVaultsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryGetAllVaultsResponse {
  repeated Vault vaults = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAllVaultsByOwnerRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  string address = 2;
}

message QueryGetAllVaultsByOwnerResponse {
  repeated Vault vaults = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAllVaultsInDefaultRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryGetAllVaultsInDefaultResponse {
  repeated Vault vaults = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
